// USAGE - define PROCESS_OGL_FUNCTION, include this file.

#ifndef PROCESS_OGL_FUNCTION
#error
#endif

PROCESS_OGL_FUNCTION( PFNGLCREATESHADERPROC, glCreateShader );
PROCESS_OGL_FUNCTION( PFNGLDELETESHADERPROC, glDeleteShader );
PROCESS_OGL_FUNCTION( PFNGLSHADERSOURCEPROC, glShaderSource );
PROCESS_OGL_FUNCTION( PFNGLCOMPILESHADERPROC, glCompileShader );
PROCESS_OGL_FUNCTION( PFNGLRELEASESHADERCOMPILERPROC, glReleaseShaderCompiler );
PROCESS_OGL_FUNCTION( PFNGLSHADERBINARYPROC, glShaderBinary );
PROCESS_OGL_FUNCTION( PFNGLGETSHADERIVPROC, glGetShaderiv );
PROCESS_OGL_FUNCTION( PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog );

/*programs*/
PROCESS_OGL_FUNCTION( PFNGLCREATEPROGRAMPROC, glCreateProgram );
PROCESS_OGL_FUNCTION( PFNGLDELETEPROGRAMPROC, glDeleteProgram );
PROCESS_OGL_FUNCTION( PFNGLDETACHSHADERPROC, glDetachShader );
PROCESS_OGL_FUNCTION( PFNGLATTACHSHADERPROC, glAttachShader );
PROCESS_OGL_FUNCTION( PFNGLLINKPROGRAMPROC, glLinkProgram );
PROCESS_OGL_FUNCTION( PFNGLUSEPROGRAMPROC, glUseProgram );
PROCESS_OGL_FUNCTION( PFNGLGETPROGRAMIVPROC, glGetProgramiv );
PROCESS_OGL_FUNCTION( PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog );
PROCESS_OGL_FUNCTION( PFNGLGETATTRIBLOCATIONPROC, glGetAttribLocation );

/*attributes*/
PROCESS_OGL_FUNCTION( PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer );
PROCESS_OGL_FUNCTION( PFNGLVERTEXATTRIBIPOINTERPROC, glVertexAttribIPointer );
PROCESS_OGL_FUNCTION( PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray );
PROCESS_OGL_FUNCTION( PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray );
PROCESS_OGL_FUNCTION( PFNGLBINDATTRIBLOCATIONPROC, glBindAttribLocation );

/*VBO*/
PROCESS_OGL_FUNCTION( PFNGLGENBUFFERSPROC, glGenBuffers );
PROCESS_OGL_FUNCTION( PFNGLBINDBUFFERPROC, glBindBuffer );
PROCESS_OGL_FUNCTION( PFNGLBUFFERDATAPROC, glBufferData );
PROCESS_OGL_FUNCTION( PFNGLBUFFERSUBDATAPROC, glBufferSubData );
PROCESS_OGL_FUNCTION( PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays );
PROCESS_OGL_FUNCTION( PFNGLBINDVERTEXARRAYPROC, glBindVertexArray );
PROCESS_OGL_FUNCTION( PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays );
PROCESS_OGL_FUNCTION( PFNGLDELETEBUFFERSPROC, glDeleteBuffers );
PROCESS_OGL_FUNCTION( PFNGLMULTIDRAWELEMENTSPROC, glMultiDrawElements );
PROCESS_OGL_FUNCTION( PFNGLDRAWELEMENTSBASEVERTEXPROC, glDrawElementsBaseVertex );
PROCESS_OGL_FUNCTION( PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC, glMultiDrawElementsBaseVertex );
PROCESS_OGL_FUNCTION( PFNGLMULTIDRAWARRAYSPROC, glMultiDrawArrays );
PROCESS_OGL_FUNCTION( PFNGLTEXBUFFERPROC, glTexBuffer );

/*uniforms*/
PROCESS_OGL_FUNCTION( PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation );
PROCESS_OGL_FUNCTION( PFNGLGETACTIVEUNIFORMPROC, glGetActiveUniform );
PROCESS_OGL_FUNCTION( PFNGLUNIFORM1IPROC, glUniform1i );
PROCESS_OGL_FUNCTION( PFNGLUNIFORMMATRIX4FVPROC, glUniformMatrix4fv );
PROCESS_OGL_FUNCTION( PFNGLUNIFORMMATRIX3FVPROC, glUniformMatrix3fv );
PROCESS_OGL_FUNCTION( PFNGLUNIFORM2FPROC, glUniform2f );
PROCESS_OGL_FUNCTION( PFNGLUNIFORM3FPROC, glUniform3f );
PROCESS_OGL_FUNCTION( PFNGLUNIFORM4FPROC, glUniform4f );
PROCESS_OGL_FUNCTION( PFNGLUNIFORM1FPROC, glUniform1f );
PROCESS_OGL_FUNCTION( PFNGLDRAWBUFFERSPROC, glDrawBuffers );

/*textures*/
PROCESS_OGL_FUNCTION( PFNGLGENERATEMIPMAPPROC, glGenerateMipmap );
#ifndef GL_VERSION_1_3
PROCESS_OGL_FUNCTION( PFNGLACTIVETEXTUREPROC, glActiveTexture );
PROCESS_OGL_FUNCTION( PFNGLTEXIMAGE3DPROC, glTexImage3D );
PROCESS_OGL_FUNCTION( PFNGLTEXSUBIMAGE3DPROC, glTexSubImage3D );
#endif

/*FBO*/
PROCESS_OGL_FUNCTION( PFNGLGENFRAMEBUFFERSPROC, glGenFramebuffers );
PROCESS_OGL_FUNCTION( PFNGLDELETEFRAMEBUFFERSPROC, glDeleteFramebuffers );
PROCESS_OGL_FUNCTION( PFNGLBINDFRAMEBUFFERPROC, glBindFramebuffer );
PROCESS_OGL_FUNCTION( PFNGLFRAMEBUFFERTEXTUREPROC, glFramebufferTexture );
PROCESS_OGL_FUNCTION( PFNGLFRAMEBUFFERTEXTURE2DPROC, glFramebufferTexture2D );
PROCESS_OGL_FUNCTION( PFNGLFRAMEBUFFERTEXTURELAYERPROC, glFramebufferTextureLayer );
PROCESS_OGL_FUNCTION( PFNGLBINDFRAGDATALOCATIONPROC, glBindFragDataLocation );
PROCESS_OGL_FUNCTION( PFNGLMINSAMPLESHADINGPROC, glMinSampleShading );

PROCESS_OGL_FUNCTION( PFNGLDRAWELEMENTSINSTANCEDPROC, glDrawElementsInstanced );
